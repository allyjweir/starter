---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: starter-app-sa
spec:
  serviceAccountName: starter-app-sa

---
apiVersion: v1
kind: Service
metadata:
  name: starter-app
  labels:
    app.kubernetes.io/name: starter-app
    app.kubernetes.io/component: webserver
spec:
  # Usually would avoid this but since I'm running it in minikube, NodePort type
  # is recommended.
  # Link: https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/
  type: NodePort
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: starter-app
    app.kubernetes.io/component: webserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: starter-app
  labels:
    app.kubernetes.io/name: starter-app
    app.kubernetes.io/component: webserver
spec:
  replicas: 1  # Ideally three spread across distinct nodes via anti-affinity configuration.
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: starter-app
      app.kubernetes.io/component: webserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: starter-app
        app.kubernetes.io/component: webserver
    spec:
      serviceAccountName: starter-app-sa
      containers:
        - name: webserver
          image: allyjweir/starter:0f8961a
          args: ["poetry", "run", "uvicorn", "app:starter", "--host 0.0.0.0", "--port 8080", "--app-dir starter/"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/liveness
              port: http
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: http
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 200Mi

---
# NOTE: Follow the steps listed here regarding the /etc/hosts file. It is
# required to make the ingress work.
# Link: https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/#create-an-ingress-resource
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: starter-app-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: starter.example
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: starter-app
            port:
              number: 8080
